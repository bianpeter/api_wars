{"version":3,"sources":["components/Planet.js","components/Residents.js","components/Modaltable.js","components/Tables.js","components/fetch.js","components/PlanetList.js","components/Navigation.js","components/Login.js","components/Registration.js","components/Sike.js","App.js","reportWebVitals.js","index.js"],"names":["Planet","planet","setResidentUrl","setBtnClick","residentBtn","residents","length","Button","id","variant","onClick","name","diameter","toString","replace","climate","terrain","surface_water","population","Resident","residentData","useState","resident","setResident","useEffect","fetch","then","response","status","json","height","mass","hair_color","skin_color","eye_color","birth_year","gender","Modaltable","residentsArray","Table","bordered","map","index","Tables","planets","residentUrl","btnClick","modale","clickHandler","className","useFetch","initUrl","url","setUrl","undefined","data","setData","PlanetList","currentPage","setCurrentPage","page","usePlanets","results","active","previous","next","Navigation","to","Login","type","placeholder","Registration","Sike","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d462702.chunk.js","sourcesContent":["import Button from 'react-bootstrap/Button';\r\n\r\nfunction Planet({ planet, setResidentUrl, setBtnClick }) {\r\n  let residentBtn = \"\";\r\n\r\n  const clickHandler = () => {\r\n    setBtnClick(true);\r\n    setResidentUrl(planet.residents); //a residentUrl statet írjuk át a residenseket tartalmazó objectekre\r\n  };\r\n\r\n  if (planet.residents.length === 0) {\r\n    residentBtn = \"No known residents\";\r\n  } else {\r\n    residentBtn = (\r\n      <Button id=\"resident_btn\" variant=\"secondary\" onClick={clickHandler}>\r\n        {planet.residents.length} resident(s)\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{planet.name}</td>\r\n      <td>\r\n        {planet.diameter === \"unknown\"\r\n          ? planet.diameter\r\n          : planet.diameter.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\") + \" km\"}\r\n      </td>\r\n      <td>{planet.climate}</td>\r\n      <td>{planet.terrain}</td>\r\n      <td>\r\n        {planet.surface_water === \"unknown\"\r\n          ? planet.surface_water\r\n          : planet.surface_water + \"%\"}\r\n      </td>\r\n      <td>\r\n        {planet.population === \"unknown\"\r\n          ? planet.population\r\n          : planet.population.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\") + \" people\"}\r\n      </td>\r\n      <td>{residentBtn}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Planet;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Resident = ({ residentData }) => {\r\n  const [resident, setResident] = useState([]); //a resident már object {}\r\n\r\n  useEffect(() => {\r\n    fetch(residentData) //residentData még url\r\n      .then((response) => {\r\n        if (response.status !== 200) return;\r\n        return response.json();\r\n      })\r\n      .then((json) => setResident(json)); //a responban kapott adat egy resident nevű object-be kerül {}\r\n  }, [residentData]);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{resident.name}</td>\r\n      <td>{resident.height}</td>\r\n      <td>{resident.mass}</td>\r\n      <td>{resident.hair_color}</td>\r\n      <td>{resident.skin_color}</td>\r\n      <td>{resident.eye_color}</td>\r\n      <td>{resident.birth_year}</td>\r\n      <td>{resident.gender}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Resident;\r\n","import Resident from \"./Residents\";\r\nimport Table from 'react-bootstrap/Table'\r\n\r\n\r\nconst Modaltable = ({ residentsArray }) => {\r\n  return (\r\n    <div>\r\n      <Table bordered>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Height</th>\r\n            <th>Mass</th>\r\n            <th>Hair color</th>\r\n            <th>Skin color</th>\r\n            <th>Eye Color</th>\r\n            <th>Birth year</th>\r\n            <th>Gender</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {residentsArray.map((resident, index) => (\r\n            <Resident key={index} residentData={resident} />\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modaltable;\r\n","import Planet from \"./Planet\";\r\nimport React, { useState } from \"react\";\r\nimport Modaltable from \"./Modaltable\";\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction Tables({ planets }) {\r\n  const [residentUrl, setResidentUrl] = useState([]);\r\n  const [btnClick, setBtnClick] = useState(false);\r\n\r\n  let modale = \"\";\r\n\r\n  const clickHandler = () => {\r\n    setBtnClick(false);\r\n  };\r\n\r\n  if (btnClick) {\r\n    modale = (\r\n      <div id=\"modal-container\">\r\n        <div id=\"modal\">\r\n          <div className=\"modal_header\">\r\n            <h1>Residents</h1>\r\n            <button onClick={clickHandler}>X</button>\r\n          </div>\r\n          <Modaltable residentsArray={residentUrl} />\r\n          <Button onClick={clickHandler}>Close</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    modale = \"\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table bordered>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Diameter</th>\r\n            <th>Climate</th>\r\n            <th>Terrain</th>\r\n            <th>Surface Water Percentage</th>\r\n            <th>Population</th>\r\n            <th>Residents</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {planets.map((planet, index) => (\r\n            <Planet\r\n              planet={planet}\r\n              key={index}\r\n              setResidentUrl={setResidentUrl}\r\n              setBtnClick={setBtnClick}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      {modale}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tables;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (initUrl) => {\r\n  const [url, setUrl] = useState(initUrl);\r\n  const [data, setData] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.status !== 200) return;\r\n        return response.json();\r\n      })\r\n      .then((json) => setData(json));\r\n  }, [url]);\r\n\r\n  return [data, setUrl];\r\n};\r\n\r\nexport const usePlanets = (page = 1) => {\r\n  const [planets, setUrl] = useFetch(\r\n    `https://swapi.dev/api/planets/?page=${page}`\r\n  );\r\n  useEffect(() => {\r\n    setUrl(`https://swapi.dev/api/planets/?page=${page}`);\r\n  }, [page, setUrl]);\r\n  return planets === undefined ? \"Loading...\" : planets;\r\n};\r\n","import Tables from \"./Tables\";\r\nimport { useState } from \"react\";\r\nimport { usePlanets } from \"./fetch\";\r\n\r\n//Bootstrap\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport React from 'react'\r\n\r\nfunction PlanetList() {\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n \r\n\r\n  const planets = usePlanets(currentPage);\r\n\r\n  function nextPage() {\r\n    planets.next !== null ? setCurrentPage(currentPage + 1) : setCurrentPage(6);\r\n  }\r\n\r\n  function prevPage() {\r\n    planets.previous !== null\r\n      ? setCurrentPage(currentPage - 1)\r\n      : setCurrentPage(1);\r\n  }\r\n\r\n  if (planets.results === undefined) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n\r\n  return (\r\n      <div className=\"table-container\">\r\n        <h1>Star Wars universe planets</h1>\r\n        <Button className=\"pagebutton\" variant=\"primary\" active onClick={prevPage}>Previous</Button>\r\n        <Button className=\"pagebutton\" variant=\"primary\" active onClick={nextPage}>Next</Button>\r\n        <Tables planets={planets.results}></Tables>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default PlanetList\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function Navigation () {\r\n\r\n\r\n  return(\r\n      <header>\r\n        <div className=\"header\">\r\n          <Link className=\"link\" to=\"/\">\r\n            <h2 className=\"link\">Planet list</h2>\r\n          </Link>\r\n          <Link className=\"link\" to=\"/sike\">\r\n            <h2>Voting statistics</h2>\r\n          </Link>\r\n          <Link className=\"link\" to=\"/registration\">\r\n            <h2>Registration</h2>\r\n          </Link>\r\n          <Link className=\"link\" to=\"/login\">\r\n            <h2>Login</h2>\r\n          </Link>\r\n          <Link className=\"link\" to=\"/sike\">\r\n            <h2>Logout</h2>\r\n          </Link>\r\n        </div>\r\n        <div className=\"sign\">\r\n          <Link className=\"link\" to=\"/sike\">\r\n            <h2>Sign in</h2>\r\n          </Link>\r\n        </div>\r\n      </header>\r\n  );\r\n}","import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport function Login() {\r\n  return (\r\n    <div id=\"allContainer\">\r\n        <div id=\"formContainer\">\r\n          <h1>Please Log In</h1>\r\n          <label>Username: </label>\r\n          <input type=\"text\" placeholder=\"Username\"></input>\r\n          <label>Password: </label>\r\n          <input type=\"password\" placeholder=\"Password\"></input>\r\n          <Link className=\"link\" to=\"/sike\">\r\n            <button>Login</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport function Registration() {\r\n  return (\r\n      <div id=\"allContainer\">\r\n        <div id=\"formContainer\">\r\n          <h1>Registration</h1>\r\n          <label>Username: </label>\r\n          <input type=\"text\" placeholder=\"Username\"></input>\r\n          <label>Password: </label>\r\n          <input type=\"password\" placeholder=\"Password\"></input>\r\n          <Link className=\"link\" to=\"/sike\">\r\n            <button>Register</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nconst Sike = () => {\r\n  return (\r\n    <div className=\"sike-container\">\r\n      <h1 className=\"sike\">\r\n        Sike\r\n      </h1>\r\n      <div className=\"overlay\"></div>\r\n      <p>u thought</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sike\r\n","import \"./scss/App.scss\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport PlanetList from \"./components/PlanetList\";\r\nimport { Navigation } from \"./components/Navigation\";\r\nimport { Login } from \"./components/Login\";\r\nimport { Registration } from \"./components/Registration\";\r\nimport  Sike  from \"./components/Sike\";\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navigation/>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={PlanetList}/>\r\n          <Route path=\"/login\" component={Login}/>\r\n          <Route path=\"/registration\" component={Registration}/>\r\n          <Route path=\"/sike\" component={Sike}/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}